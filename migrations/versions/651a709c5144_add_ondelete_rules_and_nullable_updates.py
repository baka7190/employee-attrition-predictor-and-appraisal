"""Add ondelete rules and nullable updates

Revision ID: 651a709c5144
Revises: a23d3f6af547
Create Date: 2025-09-07 11:19:27.228992

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '651a709c5144'
down_revision = 'a23d3f6af547'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('appraisals', schema=None) as batch_op:
        batch_op.alter_column('teach_s1_json',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('teach_s2_json',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('supervisor_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_constraint(batch_op.f('appraisals_supervisor_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('appraisals_employee_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['employee_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['supervisor_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('cycle_enrollment', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('cycle_enrollment_employee_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('cycle_enrollment_manager_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('cycle_enrollment_cycle_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['employee_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['manager_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'appraisal_cycle', ['cycle_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('performance_reviews', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('performance_reviews_manager_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('performance_reviews_employee_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('performance_reviews_hr_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['manager_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'users', ['hr_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'users', ['employee_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('predictions', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint(batch_op.f('predictions_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('review_audits', schema=None) as batch_op:
        batch_op.alter_column('actor_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_constraint(batch_op.f('review_audits_review_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('review_audits_actor_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['actor_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'performance_reviews', ['review_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('scores', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('scores_appraisal_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'appraisals', ['appraisal_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('users_manager_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['manager_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('workloads', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('workloads_appraisal_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'appraisals', ['appraisal_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workloads', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('workloads_appraisal_id_fkey'), 'appraisals', ['appraisal_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('users_manager_id_fkey'), 'users', ['manager_id'], ['id'])

    with op.batch_alter_table('scores', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('scores_appraisal_id_fkey'), 'appraisals', ['appraisal_id'], ['id'])

    with op.batch_alter_table('review_audits', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('review_audits_actor_id_fkey'), 'users', ['actor_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('review_audits_review_id_fkey'), 'performance_reviews', ['review_id'], ['id'])
        batch_op.alter_column('actor_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('predictions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('predictions_user_id_fkey'), 'users', ['user_id'], ['id'])
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('performance_reviews', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('performance_reviews_hr_id_fkey'), 'users', ['hr_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('performance_reviews_employee_id_fkey'), 'users', ['employee_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('performance_reviews_manager_id_fkey'), 'users', ['manager_id'], ['id'])

    with op.batch_alter_table('cycle_enrollment', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('cycle_enrollment_cycle_id_fkey'), 'appraisal_cycle', ['cycle_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('cycle_enrollment_manager_id_fkey'), 'users', ['manager_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('cycle_enrollment_employee_id_fkey'), 'users', ['employee_id'], ['id'])

    with op.batch_alter_table('appraisals', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('appraisals_employee_id_fkey'), 'users', ['employee_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('appraisals_supervisor_id_fkey'), 'users', ['supervisor_id'], ['id'])
        batch_op.alter_column('supervisor_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('teach_s2_json',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
        batch_op.alter_column('teach_s1_json',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    # ### end Alembic commands ###
